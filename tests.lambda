# ============================================================================
# Lambda Calculus Interpreter & stdlib.lambda Comprehensive Test Suite
# ============================================================================
# This file is designed to be loaded with :load tests.lambda
# It covers core features, numerals, booleans, lists, combinators, and more.
# Each test prints a result or checks an expected value.



# --- Boolean Logic ---
true 1 0                # expect 1
false 1 0               # expect 0
not true                # expect false
not false               # expect true
and true true           # expect true
and true false          # expect false
or true false           # expect true
xor true true           # expect false
if true 42 99           # expect 42
if false 42 99          # expect 99
eqBool true true        # expect true
eqBool true false       # expect false

# --- Church Numerals ---
zero (Î»x.1) 0           # expect 0
succ (succ zero)        # expect 2
plus 2 3                # expect 5
mult 3 4                # expect 12
pred 3                  # expect 2
minus 5 2               # expect 3
iszero 0                # expect true
iszero 1                # expect false
exp 2 3                 # expect 8


# --- Division and Modulo ---
div 7 2                  # expect 3
mod 7 2                  # expect 1


# --- Comparisons ---
leq 2 3                  # expect true
leq 3 2                  # expect false
eq 4 4                   # expect true
eq 4 5                   # expect false
gt 5 2                   # expect true
lt 2 5                   # expect true
neq 2 2                  # expect false
neq 2 3                  # expect true


# --- Numeric Operations ---
max 3 7                  # expect 7
min 3 7                  # expect 3
even 4                   # expect true
odd 5                    # expect true
square 6                 # expect 36
double 8                 # expect 16
half 9                   # expect 4
pow 2 5                  # expect 32


# --- List Operations ---
nil                              # expect nil
isnil nil                        # expect true
isnil (cons 1 nil)               # expect false
cons 1 (cons 2 (cons 3 nil))     # expect [1,2,3]
head (cons 1 (cons 2 (cons 3 nil)))          # expect 1
tail (cons 1 (cons 2 (cons 3 nil)))          # expect [2,3]
length (cons 1 (cons 2 (cons 3 nil)))        # expect 3
reverse (cons 1 (cons 2 (cons 3 nil)))       # expect [3,2,1]
append (cons 1 (cons 2 (cons 3 nil))) (cons 4 (cons 5 nil)) # expect [1,2,3,4,5]
map succ (cons 1 (cons 2 (cons 3 nil)))      # expect [2,3,4]
filter even (cons 1 (cons 2 (cons 3 (cons 4 nil)))) # expect [2,4]
foldr plus 0 (cons 1 (cons 2 (cons 3 nil)))  # expect 6
foldl plus 0 (cons 1 (cons 2 (cons 3 nil)))  # expect 6


# --- Advanced List Operations ---
range 5                  # expect [0,1,2,3,4]
countdown 3              # expect [3,2,1,0]
zip (cons 1 (cons 2 (cons 3 nil))) (cons 4 (cons 5 nil)) # expect [(1,4),(2,5)]
concat (cons (cons 1 (cons 2 (cons 3 nil))) (cons (cons 4 nil) nil)) # expect [1,2,3,4]


# --- Combinators and Utilities ---
K 42 99                  # expect 42
I 77                     # expect 77
S (K succ) (K 3) 0       # expect succ 0 = 1
B succ succ 1            # expect succ (succ 1) = 2
C minus 5 2              # expect minus 2 5 = 3


# --- Recursion and Advanced Functions ---
fact 5                   # expect 120
fib 7                    # expect 13
gcd 18 24                # expect 6
lcm 6 8                  # expect 24


# --- Infix Operators ---
2 + 3                    # expect 5
7 - 4                    # expect 3
3 * 4                    # expect 12
9 / 2                    # expect 4
9 % 4                    # expect 1
2 ^ 4                    # expect 16
true && false            # expect false
false || true            # expect true
5 == 5                   # expect true
5 != 4                   # expect true
2 < 3                    # expect true
2 <= 2                   # expect true
4 > 3                    # expect true
4 >= 4                   # expect true

# --- End of Test Suite ---
# To run: :load stdlib.lambda, then :load tests.lambda
# Review the output for each test variable above.
