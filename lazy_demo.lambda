# More comprehensive lazy evaluation tests

# Test that demonstrates lazy evaluation avoiding expensive computation
expensive = mult (plus @50 @50) (plus @30 @20) # Would compute 100 * 50 = 5000
cheap = @1

# This should return cheap (1) without computing expensive
lazy_choice = const cheap expensive

# Test conditional lazy evaluation
# Only the true branch should be evaluated
conditional_test = if true @999 expensive
